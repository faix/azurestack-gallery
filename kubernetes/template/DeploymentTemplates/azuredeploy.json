{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "linuxAdminUsername": {
      "type": "string",
      "defaultValue": "azureuser",
      "metadata": {
        "description": "User name for the Linux Virtual Machines that are part of the Kubernetes cluster and DVM."
      }
    },
    "sshPublicKey": {
      "metadata": {
        "description": "SSH public key used for auth to all Linux machines created as part of the the Kubernetes cluster and DVM."
      },
      "type": "string"
    },
    "masterProfileDnsPrefix": {
      "type": "string",
      "metadata": {
        "description": "This must be a region-unique name e.g. k8s-12345. Try to chose it same as the resource group name as best practice."
      }
    },
    "agentPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes Node Pool Profile Count"
      },
      "type": "int"
    },
    "agentPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The VMSize of Kubernetes node VMs"
      },
      "type": "string"
    },
    "masterPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes Master Pool Profile Count"
      },
      "type": "int"
    },
    "masterPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The VMSize of Kubernetes master VMs"
      },
      "type": "string"
    },
    "storageProfile": {
      "defaultValue": "manageddisk",
      "metadata": {
        "description": "The Storage Profile"
      },
      "type": "string"
    },
    "servicePrincipalClientId": {
      "metadata": {
        "description": "The Service Principal application ID (used by the Kubernetes Azure cloud provider). More help here: https://github.com/Azure/aks-engine/blob/master/docs/topics/service-principals.md"
      },
      "type": "securestring"
    },
    "servicePrincipalClientSecret": {
      "metadata": {
        "description": "The Service Principal Client Secret."
      },
      "type": "securestring"
    },
    "servicePrincipalCertificateKeyVaultId": {
      "defaultValue": "servicePrincipalCertificateKeyVaultId",
      "metadata": {
        "description": "the service Principal Certificate KeyVault Id"
      },
      "type": "string"
    },
    "servicePrincipalCertificateKeyVaultSecretName": {
      "defaultValue": "servicePrincipalCertificateKeyVaultSecretName",
      "metadata": {
        "description": "The service Principal Certificate KeyVault SecretName"
      },
      "type": "string"
    },
    "identitySystem": {
      "defaultValue": "AzureAD",
      "allowedValues": [
        "AzureAD",
        "ADFS"
      ],
      "metadata": {
        "description": "The identity system of Azure Stack. The value could be AzureAD or ADFS"
      },
      "type": "string"
    },
    "kubernetesAzureCloudProviderVersion": {
      "type": "string",
      "defaultValue": "1.11",
      "metadata": {
        "description": "This is the version for the Kubernetes Azure cloud provider. We would use a custom Kubernetes build specifically for Azure Stack for each version."
      }
    }
  },
  "variables": {
    "resourceGroupName": "[resourceGroup().name]",
    "dnsNameForPublicIP": "[toLower(concat('vmd-dns', parameters('masterProfileDnsPrefix')))]",
    "location": "[resourceGroup().location]",
    "imagePublisher": "Canonical",
    "imageOffer": "UbuntuServer",
    "imageSku": "16.04-LTS",
    "imageVersion": "latest",
    "vmSize": "Standard_D2_v2",
    "OSDiskName": "osdisk",
    "nicName": "[concat('vmd-vnic', uniqueString(resourceGroup().id))]",
    "addressPrefix": "10.0.0.0/24",
    "subnetName": "mySubnet",
    "subnetPrefix": "10.0.0.0/24",
    "storageAccountName": "[concat('vmdsa', uniquestring(resourceGroup().id))]",
    "storageAccountType": "Standard_LRS",
    "publicIPAddressName": "[concat('vmd-publicIP', uniqueString(resourceGroup().id))]",
    "publicIPAddressType": "Static",
    "vmStorageAccountContainerName": "vhds",
    "vmName": "[concat('vmd-', uniqueString(resourceGroup().id))]",
    "virtualNetworkName": "[concat('vmd-vnet-', uniqueString(resourceGroup().id))]",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]",
    "networkSecurityGroupName": "[tolower(concat('vmd-nsg',uniquestring(resourceGroup().id)))]",
    "sshKeyPath": "[concat('/home/',parameters('linuxAdminUsername'),'/.ssh/authorized_keys')]",
    "tenantSubscriptionId": "[subscription().subscriptionId]",
    "scriptName": "script",
    "singleQuote": "'",
    "scriptParameters": "[concat('IDENTITY_SYSTEM=','\"',parameters('identitySystem'),'\"',' RESOURCE_GROUP_NAME=','\"',variables('resourceGroupName'),'\"',' PUBLICIP_DNS=','\"',variables('dnsNameForPublicIP'),'\"' ,' TENANT_ID=','\"',subscription().tenantId,'\"' ,' TENANT_SUBSCRIPTION_ID=','\"',variables('tenantSubscriptionId'),'\"',' ADMIN_USERNAME=','\"',parameters('linuxAdminUsername'),'\"',' MASTER_DNS_PREFIX=','\"',parameters('masterProfileDnsPrefix'),'\"' ,' AGENT_COUNT=','\"',parameters('agentPoolProfileCount'),'\"' ,' AGENT_SIZE=','\"',parameters('agentPoolProfileVMSize'),'\"' ,' MASTER_COUNT=','\"',parameters('masterPoolProfileCount'),'\"',' MASTER_SIZE=','\"',parameters('masterPoolProfileVMSize'),'\"' ,' SPN_CLIENT_ID=','\"',parameters('servicePrincipalClientId'),'\"' ,' SPN_CLIENT_SECRET=','\"',parameters('servicePrincipalClientSecret'),'\"' ,' SPN_CLIENT_SECRET_KEYVAULT_ID=','\"',parameters('servicePrincipalCertificateKeyVaultId'),'\"' ,' SPN_CLIENT_SECRET_KEYVAULT_SECRET_NAME=','\"',parameters('servicePrincipalCertificateKeyVaultSecretName'),'\"' ,' K8S_AZURE_CLOUDPROVIDER_VERSION=','\"',parameters('kubernetesAzureCloudProviderVersion'),'\"' ,' REGION_NAME=','\"',variables('location'),'\"' ,' SSH_PUBLICKEY=','\"',parameters('sshPublicKey'),'\"' ,' STORAGE_PROFILE=','\"',parameters('storageProfile'),'\"')]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[toLower(variables('storageAccountName'))]",
      "apiVersion": "2015-06-15",
      "location": "[variables('location')]",
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('networkSecurityGroupName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
          {
            "name": "ssh",
            "properties": {
              "description": "Allow SSH",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 200,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "location": "[variables('location')]",
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[variables('dnsNameForPublicIP')]"
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[variables('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
        "[variables('networkSecurityGroupName')]"
      ],
      "properties": {
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
        },
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2016-03-30",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vmName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "customData": "[base64(concat('#cloud-config\n\nwrite_files:\n- path: \"/opt/azure/containers/script.sh\"\n  permissions: \"0744\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    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'))]",
          "computerName": "[variables('vmName')]",
          "adminUsername": "[parameters('linuxAdminUsername')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": "true",
            "ssh": {
              "publicKeys": [
                {
                  "keyData": "[parameters('sshPublicKey')]",
                  "path": "[variables('sshKeyPath')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[variables('imageSku')]",
            "version": "[variables('imageVersion')]"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob, variables('vmStorageAccountContainerName'),'/',variables('OSDiskName'),'.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": "true",
            "storageUri": "[reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vmName'),'/LinuxCustomScriptExtension')]",
      "apiVersion": "2016-03-30",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.0",
        "autoUpgradeMinorVersion": "true",
        "protectedSettings": {
          "commandToExecute": "[concat(variables('scriptParameters'), ' PUBLICIP_FQDN=', '\"', reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn,'\"',' /bin/bash /opt/azure/containers/script.sh >> /var/log/azure/deploy-script-dvm.log 2>&1')]"
        }
      }
    }
  ],
  "outputs": {
    "dvmPublicIpFqdn": {
      "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn]",
      "type": "string"
    }
  }
}
