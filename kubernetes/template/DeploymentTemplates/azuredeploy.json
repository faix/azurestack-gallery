{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "linuxAdminUsername": {
      "type": "string",
      "defaultValue": "azureuser",
      "metadata": {
        "description": "User name for the Linux Virtual Machines that are part of the Kubernetes cluster and DVM."
      }
    },
    "sshPublicKey": {
      "metadata": {
        "description": "SSH public key used for auth to all Linux machines created as part of the the Kubernetes cluster and DVM."
      },
      "type": "string"
    },
    "masterProfileDnsPrefix": {
      "type": "string",
      "metadata": {
        "description": "This must be a region-unique name e.g. k8s-12345. Try to chose it same as the resource group name as best practice."
      }
    },
    "agentPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes Node Pool Profile Count"
      },
      "type": "int"
    },
    "agentPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The VMSize of Kubernetes node VMs"
      },
      "type": "string"
    },
    "masterPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes Master Pool Profile Count"
      },
      "type": "int"
    },
    "masterPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The VMSize of Kubernetes master VMs"
      },
      "type": "string"
    },
    "storageProfile": {
      "defaultValue": "manageddisk",
      "metadata": {
        "description": "The Storage Profile"
      },
      "type": "string"
    },
    "servicePrincipalClientId": {
      "metadata": {
        "description": "The Service Principal application ID (used by the Kubernetes Azure cloud provider). More help here: https://github.com/Azure/aks-engine/blob/master/docs/topics/service-principals.md"
      },
      "type": "securestring"
    },
    "servicePrincipalClientSecret": {
      "metadata": {
        "description": "The Service Principal Client Secret."
      },
      "type": "securestring"
    },
    "servicePrincipalCertificateKeyVaultId": {
      "defaultValue": "servicePrincipalCertificateKeyVaultId",
      "metadata": {
        "description": "the service Principal Certificate KeyVault Id"
      },
      "type": "string"
    },
    "servicePrincipalCertificateKeyVaultSecretName": {
      "defaultValue": "servicePrincipalCertificateKeyVaultSecretName",
      "metadata": {
        "description": "The service Principal Certificate KeyVault SecretName"
      },
      "type": "string"
    },
    "identitySystem": {
      "defaultValue": "AzureAD",
      "allowedValues": [
        "AzureAD",
        "ADFS"
      ],
      "metadata": {
        "description": "The identity system of Azure Stack. The value could be AzureAD or ADFS"
      },
      "type": "string"
    },
    "kubernetesAzureCloudProviderVersion": {
      "type": "string",
      "defaultValue": "1.11",
      "metadata": {
        "description": "This is the version for the Kubernetes Azure cloud provider. We would use a custom Kubernetes build specifically for Azure Stack for each version."
      }
    }
  },
  "variables": {
    "resourceGroupName": "[resourceGroup().name]",
    "dnsNameForPublicIP": "[toLower(concat('vmd-dns', parameters('masterProfileDnsPrefix')))]",
    "location": "[resourceGroup().location]",
    "imagePublisher": "Canonical",
    "imageOffer": "UbuntuServer",
    "imageSku": "16.04-LTS",
    "imageVersion": "latest",
    "vmSize": "Standard_D2_v2",
    "OSDiskName": "osdisk",
    "nicName": "[concat('vmd-vnic', uniqueString(resourceGroup().id))]",
    "addressPrefix": "10.0.0.0/24",
    "subnetName": "mySubnet",
    "subnetPrefix": "10.0.0.0/24",
    "storageAccountName": "[concat('vmdsa', uniquestring(resourceGroup().id))]",
    "storageAccountType": "Standard_LRS",
    "publicIPAddressName": "[concat('vmd-publicIP', uniqueString(resourceGroup().id))]",
    "publicIPAddressType": "Static",
    "vmStorageAccountContainerName": "vhds",
    "vmName": "[concat('vmd-', uniqueString(resourceGroup().id))]",
    "virtualNetworkName": "[concat('vmd-vnet-', uniqueString(resourceGroup().id))]",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]",
    "networkSecurityGroupName": "[tolower(concat('vmd-nsg',uniquestring(resourceGroup().id)))]",
    "sshKeyPath": "[concat('/home/',parameters('linuxAdminUsername'),'/.ssh/authorized_keys')]",
    "tenantSubscriptionId": "[subscription().subscriptionId]",
    "scriptName": "script",
    "singleQuote": "'",
    "scriptParameters": "[concat('IDENTITY_SYSTEM=','\"',parameters('identitySystem'),'\"',' RESOURCE_GROUP_NAME=','\"',variables('resourceGroupName'),'\"',' PUBLICIP_DNS=','\"',variables('dnsNameForPublicIP'),'\"' ,' TENANT_ID=','\"',subscription().tenantId,'\"' ,' TENANT_SUBSCRIPTION_ID=','\"',variables('tenantSubscriptionId'),'\"',' ADMIN_USERNAME=','\"',parameters('linuxAdminUsername'),'\"',' MASTER_DNS_PREFIX=','\"',parameters('masterProfileDnsPrefix'),'\"' ,' AGENT_COUNT=','\"',parameters('agentPoolProfileCount'),'\"' ,' AGENT_SIZE=','\"',parameters('agentPoolProfileVMSize'),'\"' ,' MASTER_COUNT=','\"',parameters('masterPoolProfileCount'),'\"',' MASTER_SIZE=','\"',parameters('masterPoolProfileVMSize'),'\"' ,' SPN_CLIENT_ID=','\"',parameters('servicePrincipalClientId'),'\"' ,' SPN_CLIENT_SECRET=','\"',parameters('servicePrincipalClientSecret'),'\"' ,' SPN_CLIENT_SECRET_KEYVAULT_ID=','\"',parameters('servicePrincipalCertificateKeyVaultId'),'\"' ,' SPN_CLIENT_SECRET_KEYVAULT_SECRET_NAME=','\"',parameters('servicePrincipalCertificateKeyVaultSecretName'),'\"' ,' K8S_AZURE_CLOUDPROVIDER_VERSION=','\"',parameters('kubernetesAzureCloudProviderVersion'),'\"' ,' REGION_NAME=','\"',variables('location'),'\"' ,' SSH_PUBLICKEY=','\"',parameters('sshPublicKey'),'\"' ,' STORAGE_PROFILE=','\"',parameters('storageProfile'),'\"')]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[toLower(variables('storageAccountName'))]",
      "apiVersion": "2015-06-15",
      "location": "[variables('location')]",
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('networkSecurityGroupName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
          {
            "name": "ssh",
            "properties": {
              "description": "Allow SSH",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 200,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "location": "[variables('location')]",
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[variables('dnsNameForPublicIP')]"
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[variables('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
        "[variables('networkSecurityGroupName')]"
      ],
      "properties": {
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
        },
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2016-03-30",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vmName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "customData": "[base64(concat('#cloud-config\n\nwrite_files:\n- path: \"/opt/azure/containers/script.sh\"\n  permissions: \"0744\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    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'))]",
          "computerName": "[variables('vmName')]",
          "adminUsername": "[parameters('linuxAdminUsername')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": "true",
            "ssh": {
              "publicKeys": [
                {
                  "keyData": "[parameters('sshPublicKey')]",
                  "path": "[variables('sshKeyPath')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[variables('imageSku')]",
            "version": "[variables('imageVersion')]"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob, variables('vmStorageAccountContainerName'),'/',variables('OSDiskName'),'.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": "true",
            "storageUri": "[reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vmName'),'/LinuxCustomScriptExtension')]",
      "apiVersion": "2016-03-30",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.0",
        "autoUpgradeMinorVersion": "true",
        "protectedSettings": {
          "commandToExecute": "[concat(variables('scriptParameters'), ' PUBLICIP_FQDN=', '\"', reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn,'\"',' /bin/bash /opt/azure/containers/script.sh >> /var/log/azure/deploy-script-dvm.log 2>&1')]"
        }
      }
    }
  ],
  "outputs": {
    "dvmPublicIpFqdn": {
      "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn]",
      "type": "string"
    }
  }
}
