{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "linuxAdminUsername": {
      "type": "string",
      "defaultValue": "azureuser",
      "metadata": {
        "description": "User name for the Linux Virtual Machines that are part of the Kubernetes cluster and DVM."
      }
    },
    "sshPublicKey": {
      "metadata": {
        "description": "SSH public key used for auth to all Linux machines created as part of the the Kubernetes cluster and DVM."
      },
      "type": "string"
    },
    "masterProfileDnsPrefix": {
      "type": "string",
      "metadata": {
        "description": "This must be a region-unique name e.g. k8s-12345. Try to chose it same as the resource group name as best practice."
      }
    },
    "agentPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes Node Pool Profile Count"
      },
      "type": "int"
    },
    "agentPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The VMSize of Kubernetes node VMs"
      },
      "type": "string"
    },
    "masterPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes Master Pool Profile Count"
      },
      "type": "int"
    },
    "masterPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The VMSize of Kubernetes master VMs"
      },
      "type": "string"
    },
    "storageProfile": {
      "defaultValue": "manageddisk",
      "metadata": {
        "description": "The Storage Profile"
      },
      "type": "string"
    },
    "servicePrincipalClientId": {
      "metadata": {
        "description": "The Service Principal application ID (used by the Kubernetes Azure cloud provider). More help here: https://github.com/Azure/aks-engine/blob/master/docs/topics/service-principals.md"
      },
      "type": "securestring"
    },
    "servicePrincipalClientSecret": {
      "metadata": {
        "description": "The Service Principal Client Secret."
      },
      "type": "securestring"
    },
    "servicePrincipalCertificateKeyVaultId": {
      "defaultValue": "servicePrincipalCertificateKeyVaultId",
      "metadata": {
        "description": "the service Principal Certificate KeyVault Id"
      },
      "type": "string"
    },
    "servicePrincipalCertificateKeyVaultSecretName": {
      "defaultValue": "servicePrincipalCertificateKeyVaultSecretName",
      "metadata": {
        "description": "The service Principal Certificate KeyVault SecretName"
      },
      "type": "string"
    },
    "identitySystem": {
      "defaultValue": "AzureAD",
      "allowedValues": [
        "AzureAD",
        "ADFS"
      ],
      "metadata": {
        "description": "The identity system of Azure Stack. The value could be AzureAD or ADFS"
      },
      "type": "string"
    },
    "kubernetesAzureCloudProviderVersion": {
      "type": "string",
      "defaultValue": "1.11",
      "metadata": {
        "description": "This is the version for the Kubernetes Azure cloud provider. We would use a custom Kubernetes build specifically for Azure Stack for each version."
      }
    }
  },
  "variables": {
    "resourceGroupName": "[resourceGroup().name]",
    "dnsNameForPublicIP": "[toLower(concat('vmd-dns', parameters('masterProfileDnsPrefix')))]",
    "location": "[resourceGroup().location]",
    "imagePublisher": "Canonical",
    "imageOffer": "UbuntuServer",
    "imageSku": "16.04-LTS",
    "imageVersion": "latest",
    "vmSize": "Standard_D2_v2",
    "OSDiskName": "osdisk",
    "nicName": "[concat('vmd-vnic', uniqueString(resourceGroup().id))]",
    "addressPrefix": "10.0.0.0/24",
    "subnetName": "mySubnet",
    "subnetPrefix": "10.0.0.0/24",
    "storageAccountName": "[concat('vmdsa', uniquestring(resourceGroup().id))]",
    "storageAccountType": "Standard_LRS",
    "publicIPAddressName": "[concat('vmd-publicIP', uniqueString(resourceGroup().id))]",
    "publicIPAddressType": "Static",
    "vmStorageAccountContainerName": "vhds",
    "vmName": "[concat('vmd-', uniqueString(resourceGroup().id))]",
    "virtualNetworkName": "[concat('vmd-vnet-', uniqueString(resourceGroup().id))]",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]",
    "networkSecurityGroupName": "[tolower(concat('vmd-nsg',uniquestring(resourceGroup().id)))]",
    "sshKeyPath": "[concat('/home/',parameters('linuxAdminUsername'),'/.ssh/authorized_keys')]",
    "tenantSubscriptionId": "[subscription().subscriptionId]",
    "scriptName": "script",
    "singleQuote": "'",
    "scriptParameters": "[concat('IDENTITY_SYSTEM=','\"',parameters('identitySystem'),'\"',' RESOURCE_GROUP_NAME=','\"',variables('resourceGroupName'),'\"',' PUBLICIP_DNS=','\"',variables('dnsNameForPublicIP'),'\"' ,' TENANT_ID=','\"',subscription().tenantId,'\"' ,' TENANT_SUBSCRIPTION_ID=','\"',variables('tenantSubscriptionId'),'\"',' ADMIN_USERNAME=','\"',parameters('linuxAdminUsername'),'\"',' MASTER_DNS_PREFIX=','\"',parameters('masterProfileDnsPrefix'),'\"' ,' AGENT_COUNT=','\"',parameters('agentPoolProfileCount'),'\"' ,' AGENT_SIZE=','\"',parameters('agentPoolProfileVMSize'),'\"' ,' MASTER_COUNT=','\"',parameters('masterPoolProfileCount'),'\"',' MASTER_SIZE=','\"',parameters('masterPoolProfileVMSize'),'\"' ,' SPN_CLIENT_ID=','\"',parameters('servicePrincipalClientId'),'\"' ,' SPN_CLIENT_SECRET=','\"',parameters('servicePrincipalClientSecret'),'\"' ,' SPN_CLIENT_SECRET_KEYVAULT_ID=','\"',parameters('servicePrincipalCertificateKeyVaultId'),'\"' ,' SPN_CLIENT_SECRET_KEYVAULT_SECRET_NAME=','\"',parameters('servicePrincipalCertificateKeyVaultSecretName'),'\"' ,' K8S_AZURE_CLOUDPROVIDER_VERSION=','\"',parameters('kubernetesAzureCloudProviderVersion'),'\"' ,' REGION_NAME=','\"',variables('location'),'\"' ,' SSH_PUBLICKEY=','\"',parameters('sshPublicKey'),'\"' ,' STORAGE_PROFILE=','\"',parameters('storageProfile'),'\"')]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[toLower(variables('storageAccountName'))]",
      "apiVersion": "2015-06-15",
      "location": "[variables('location')]",
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('networkSecurityGroupName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
          {
            "name": "ssh",
            "properties": {
              "description": "Allow SSH",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 200,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "location": "[variables('location')]",
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[variables('dnsNameForPublicIP')]"
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[variables('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
        "[variables('networkSecurityGroupName')]"
      ],
      "properties": {
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
        },
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2016-03-30",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vmName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "customData": "[base64(concat('#cloud-config\n\nwrite_files:\n- path: \"/opt/azure/containers/script.sh\"\n  permissions: \"0744\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    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'))]",
          "computerName": "[variables('vmName')]",
          "adminUsername": "[parameters('linuxAdminUsername')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": "true",
            "ssh": {
              "publicKeys": [
                {
                  "keyData": "[parameters('sshPublicKey')]",
                  "path": "[variables('sshKeyPath')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[variables('imageSku')]",
            "version": "[variables('imageVersion')]"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob, variables('vmStorageAccountContainerName'),'/',variables('OSDiskName'),'.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": "true",
            "storageUri": "[reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vmName'),'/LinuxCustomScriptExtension')]",
      "apiVersion": "2016-03-30",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.0",
        "autoUpgradeMinorVersion": "true",
        "protectedSettings": {
          "commandToExecute": "[concat(variables('scriptParameters'), ' PUBLICIP_FQDN=', '\"', reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn,'\"',' /bin/bash /opt/azure/containers/script.sh >> /var/log/azure/deploy-script-dvm.log 2>&1')]"
        }
      }
    }
  ],
  "outputs": {
    "dvmPublicIpFqdn": {
      "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn]",
      "type": "string"
    }
  }
}
