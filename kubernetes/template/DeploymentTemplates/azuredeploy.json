{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "linuxAdminUsername": {
      "type": "string",
      "defaultValue": "azureuser",
      "metadata": {
        "description": "User name for the Linux Virtual Machines that are part of the Kubernetes cluster and DVM."
      }
    },
    "sshPublicKey": {
      "metadata": {
        "description": "SSH public key used for auth to all Linux machines created as part of the the Kubernetes cluster and DVM."
      },
      "type": "string"
    },
    "masterProfileDnsPrefix": {
      "type": "string",
      "metadata": {
        "description": "This must be a region-unique name e.g. k8s-12345. Try to chose it same as the resource group name as best practice."
      }
    },
    "agentPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes Node Pool Profile Count"
      },
      "type": "int"
    },
    "agentPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The VMSize of Kubernetes node VMs"
      },
      "type": "string"
    },
    "masterPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes Master Pool Profile Count"
      },
      "type": "int"
    },
    "masterPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The VMSize of Kubernetes master VMs"
      },
      "type": "string"
    },
    "storageProfile": {
      "defaultValue": "manageddisk",
      "metadata": {
        "description": "The Storage Profile"
      },
      "type": "string"
    },
    "servicePrincipalClientId": {
      "metadata": {
        "description": "The Service Principal application ID (used by the Kubernetes Azure cloud provider). More help here: https://github.com/Azure/aks-engine/blob/master/docs/topics/service-principals.md"
      },
      "type": "securestring"
    },
    "servicePrincipalClientSecret": {
      "metadata": {
        "description": "The Service Principal Client Secret."
      },
      "type": "securestring"
    },
    "servicePrincipalCertificateKeyVaultId": {
      "defaultValue": "servicePrincipalCertificateKeyVaultId",
      "metadata": {
        "description": "the service Principal Certificate KeyVault Id"
      },
      "type": "string"
    },
    "servicePrincipalCertificateKeyVaultSecretName": {
      "defaultValue": "servicePrincipalCertificateKeyVaultSecretName",
      "metadata": {
        "description": "The service Principal Certificate KeyVault SecretName"
      },
      "type": "string"
    },
    "identitySystem": {
      "defaultValue": "AzureAD",
      "allowedValues": [
        "AzureAD",
        "ADFS"
      ],
      "metadata": {
        "description": "The identity system of Azure Stack. The value could be AzureAD or ADFS"
      },
      "type": "string"
    },
    "kubernetesAzureCloudProviderVersion": {
      "type": "string",
      "defaultValue": "1.11",
      "metadata": {
        "description": "This is the version for the Kubernetes Azure cloud provider. We would use a custom Kubernetes build specifically for Azure Stack for each version."
      }
    }
  },
  "variables": {
    "resourceGroupName": "[resourceGroup().name]",
    "dnsNameForPublicIP": "[toLower(concat('vmd-dns', parameters('masterProfileDnsPrefix')))]",
    "location": "[resourceGroup().location]",
    "imagePublisher": "Canonical",
    "imageOffer": "UbuntuServer",
    "imageSku": "16.04-LTS",
    "imageVersion": "latest",
    "vmSize": "Standard_D2_v2",
    "OSDiskName": "osdisk",
    "nicName": "[concat('vmd-vnic', uniqueString(resourceGroup().id))]",
    "addressPrefix": "10.0.0.0/24",
    "subnetName": "mySubnet",
    "subnetPrefix": "10.0.0.0/24",
    "storageAccountName": "[concat('vmdsa', uniquestring(resourceGroup().id))]",
    "storageAccountType": "Standard_LRS",
    "publicIPAddressName": "[concat('vmd-publicIP', uniqueString(resourceGroup().id))]",
    "publicIPAddressType": "Static",
    "vmStorageAccountContainerName": "vhds",
    "vmName": "[concat('vmd-', uniqueString(resourceGroup().id))]",
    "virtualNetworkName": "[concat('vmd-vnet-', uniqueString(resourceGroup().id))]",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]",
    "networkSecurityGroupName": "[tolower(concat('vmd-nsg',uniquestring(resourceGroup().id)))]",
    "sshKeyPath": "[concat('/home/',parameters('linuxAdminUsername'),'/.ssh/authorized_keys')]",
    "tenantSubscriptionId": "[subscription().subscriptionId]",
    "scriptName": "script",
    "singleQuote": "'",
    "scriptParameters": "[concat('IDENTITY_SYSTEM=','\"',parameters('identitySystem'),'\"',' RESOURCE_GROUP_NAME=','\"',variables('resourceGroupName'),'\"',' PUBLICIP_DNS=','\"',variables('dnsNameForPublicIP'),'\"' ,' TENANT_ID=','\"',subscription().tenantId,'\"' ,' TENANT_SUBSCRIPTION_ID=','\"',variables('tenantSubscriptionId'),'\"',' ADMIN_USERNAME=','\"',parameters('linuxAdminUsername'),'\"',' MASTER_DNS_PREFIX=','\"',parameters('masterProfileDnsPrefix'),'\"' ,' AGENT_COUNT=','\"',parameters('agentPoolProfileCount'),'\"' ,' AGENT_SIZE=','\"',parameters('agentPoolProfileVMSize'),'\"' ,' MASTER_COUNT=','\"',parameters('masterPoolProfileCount'),'\"',' MASTER_SIZE=','\"',parameters('masterPoolProfileVMSize'),'\"' ,' SPN_CLIENT_ID=','\"',parameters('servicePrincipalClientId'),'\"' ,' SPN_CLIENT_SECRET=','\"',parameters('servicePrincipalClientSecret'),'\"' ,' SPN_CLIENT_SECRET_KEYVAULT_ID=','\"',parameters('servicePrincipalCertificateKeyVaultId'),'\"' ,' SPN_CLIENT_SECRET_KEYVAULT_SECRET_NAME=','\"',parameters('servicePrincipalCertificateKeyVaultSecretName'),'\"' ,' K8S_AZURE_CLOUDPROVIDER_VERSION=','\"',parameters('kubernetesAzureCloudProviderVersion'),'\"' ,' REGION_NAME=','\"',variables('location'),'\"' ,' SSH_PUBLICKEY=','\"',parameters('sshPublicKey'),'\"' ,' STORAGE_PROFILE=','\"',parameters('storageProfile'),'\"')]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[toLower(variables('storageAccountName'))]",
      "apiVersion": "2015-06-15",
      "location": "[variables('location')]",
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('networkSecurityGroupName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
          {
            "name": "ssh",
            "properties": {
              "description": "Allow SSH",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 200,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "location": "[variables('location')]",
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[variables('dnsNameForPublicIP')]"
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[variables('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
        "[variables('networkSecurityGroupName')]"
      ],
      "properties": {
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
        },
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2016-03-30",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vmName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "customData": "[base64(concat('#cloud-config\n\nwrite_files:\n- path: \"/opt/azure/containers/script.sh\"\n  permissions: \"0744\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    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'))]",
          "computerName": "[variables('vmName')]",
          "adminUsername": "[parameters('linuxAdminUsername')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": "true",
            "ssh": {
              "publicKeys": [
                {
                  "keyData": "[parameters('sshPublicKey')]",
                  "path": "[variables('sshKeyPath')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[variables('imageSku')]",
            "version": "[variables('imageVersion')]"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob, variables('vmStorageAccountContainerName'),'/',variables('OSDiskName'),'.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": "true",
            "storageUri": "[reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vmName'),'/LinuxCustomScriptExtension')]",
      "apiVersion": "2016-03-30",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.0",
        "autoUpgradeMinorVersion": "true",
        "protectedSettings": {
          "commandToExecute": "[concat(variables('scriptParameters'), ' PUBLICIP_FQDN=', '\"', reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn,'\"',' /bin/bash /opt/azure/containers/script.sh >> /var/log/azure/deploy-script-dvm.log 2>&1')]"
        }
      }
    }
  ],
  "outputs": {
    "dvmPublicIpFqdn": {
      "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn]",
      "type": "string"
    }
  }
}
