{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "linuxAdminUsername": {
      "type": "string",
      "defaultValue": "azureuser",
      "metadata": {
        "description": "User name for the Linux Virtual Machines that are part of the Kubernetes cluster and DVM."
      }
    },
    "sshPublicKey": {
      "metadata": {
        "description": "SSH public key used for auth to all Linux machines created as part of the the Kubernetes cluster and DVM."
      },
      "type": "string"
    },
    "masterProfileDnsPrefix": {
      "type": "string",
      "metadata": {
        "description": "This must be a region-unique name e.g. k8s-12345. Try to chose it same as the resource group name as best practice."
      }
    },
    "agentPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes Node Pool Profile Count"
      },
      "type": "int"
    },
    "agentPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The VMSize of Kubernetes node VMs"
      },
      "type": "string"
    },
    "masterPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes Master Pool Profile Count"
      },
      "type": "int"
    },
    "masterPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The VMSize of Kubernetes master VMs"
      },
      "type": "string"
    },
    "storageProfile": {
      "defaultValue": "manageddisk",
      "metadata": {
        "description": "The Storage Profile"
      },
      "type": "string"
    },
    "servicePrincipalClientId": {
      "metadata": {
        "description": "The Service Principal application ID (used by the Kubernetes Azure cloud provider). More help here: https://github.com/Azure/aks-engine/blob/master/docs/topics/service-principals.md"
      },
      "type": "securestring"
    },
    "servicePrincipalClientSecret": {
      "metadata": {
        "description": "The Service Principal Client Secret."
      },
      "type": "securestring"
    },
    "servicePrincipalCertificateKeyVaultId": {
      "defaultValue": "servicePrincipalCertificateKeyVaultId",
      "metadata": {
        "description": "the service Principal Certificate KeyVault Id"
      },
      "type": "string"
    },
    "servicePrincipalCertificateKeyVaultSecretName": {
      "defaultValue": "servicePrincipalCertificateKeyVaultSecretName",
      "metadata": {
        "description": "The service Principal Certificate KeyVault SecretName"
      },
      "type": "string"
    },
    "identitySystem": {
      "defaultValue": "AzureAD",
      "allowedValues": [
        "AzureAD",
        "ADFS"
      ],
      "metadata": {
        "description": "The identity system of Azure Stack. The value could be AzureAD or ADFS"
      },
      "type": "string"
    },
    "kubernetesAzureCloudProviderVersion": {
      "type": "string",
      "defaultValue": "1.11",
      "metadata": {
        "description": "This is the version for the Kubernetes Azure cloud provider. We would use a custom Kubernetes build specifically for Azure Stack for each version."
      }
    }
  },
  "variables": {
    "resourceGroupName": "[resourceGroup().name]",
    "dnsNameForPublicIP": "[toLower(concat('vmd-dns', parameters('masterProfileDnsPrefix')))]",
    "location": "[resourceGroup().location]",
    "imagePublisher": "Canonical",
    "imageOffer": "UbuntuServer",
    "imageSku": "16.04-LTS",
    "imageVersion": "latest",
    "vmSize": "Standard_D2_v2",
    "OSDiskName": "osdisk",
    "nicName": "[concat('vmd-vnic', uniqueString(resourceGroup().id))]",
    "addressPrefix": "10.0.0.0/24",
    "subnetName": "mySubnet",
    "subnetPrefix": "10.0.0.0/24",
    "storageAccountName": "[concat('vmdsa', uniquestring(resourceGroup().id))]",
    "storageAccountType": "Standard_LRS",
    "publicIPAddressName": "[concat('vmd-publicIP', uniqueString(resourceGroup().id))]",
    "publicIPAddressType": "Static",
    "vmStorageAccountContainerName": "vhds",
    "vmName": "[concat('vmd-', uniqueString(resourceGroup().id))]",
    "virtualNetworkName": "[concat('vmd-vnet-', uniqueString(resourceGroup().id))]",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]",
    "networkSecurityGroupName": "[tolower(concat('vmd-nsg',uniquestring(resourceGroup().id)))]",
    "sshKeyPath": "[concat('/home/',parameters('linuxAdminUsername'),'/.ssh/authorized_keys')]",
    "tenantSubscriptionId": "[subscription().subscriptionId]",
    "scriptName": "script",
    "singleQuote": "'",
    "scriptParameters": "[concat('IDENTITY_SYSTEM=','\"',parameters('identitySystem'),'\"',' RESOURCE_GROUP_NAME=','\"',variables('resourceGroupName'),'\"',' PUBLICIP_DNS=','\"',variables('dnsNameForPublicIP'),'\"' ,' TENANT_ID=','\"',subscription().tenantId,'\"' ,' TENANT_SUBSCRIPTION_ID=','\"',variables('tenantSubscriptionId'),'\"',' ADMIN_USERNAME=','\"',parameters('linuxAdminUsername'),'\"',' MASTER_DNS_PREFIX=','\"',parameters('masterProfileDnsPrefix'),'\"' ,' AGENT_COUNT=','\"',parameters('agentPoolProfileCount'),'\"' ,' AGENT_SIZE=','\"',parameters('agentPoolProfileVMSize'),'\"' ,' MASTER_COUNT=','\"',parameters('masterPoolProfileCount'),'\"',' MASTER_SIZE=','\"',parameters('masterPoolProfileVMSize'),'\"' ,' SPN_CLIENT_ID=','\"',parameters('servicePrincipalClientId'),'\"' ,' SPN_CLIENT_SECRET=','\"',parameters('servicePrincipalClientSecret'),'\"' ,' SPN_CLIENT_SECRET_KEYVAULT_ID=','\"',parameters('servicePrincipalCertificateKeyVaultId'),'\"' ,' SPN_CLIENT_SECRET_KEYVAULT_SECRET_NAME=','\"',parameters('servicePrincipalCertificateKeyVaultSecretName'),'\"' ,' K8S_AZURE_CLOUDPROVIDER_VERSION=','\"',parameters('kubernetesAzureCloudProviderVersion'),'\"' ,' REGION_NAME=','\"',variables('location'),'\"' ,' SSH_PUBLICKEY=','\"',parameters('sshPublicKey'),'\"' ,' STORAGE_PROFILE=','\"',parameters('storageProfile'),'\"')]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[toLower(variables('storageAccountName'))]",
      "apiVersion": "2015-06-15",
      "location": "[variables('location')]",
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('networkSecurityGroupName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
          {
            "name": "ssh",
            "properties": {
              "description": "Allow SSH",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 200,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "location": "[variables('location')]",
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[variables('dnsNameForPublicIP')]"
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[variables('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
        "[variables('networkSecurityGroupName')]"
      ],
      "properties": {
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
        },
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2016-03-30",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vmName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "customData": "[base64(concat('#cloud-config\n\nwrite_files:\n- path: \"/opt/azure/containers/script.sh\"\n  permissions: \"0744\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    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'))]",
          "computerName": "[variables('vmName')]",
          "adminUsername": "[parameters('linuxAdminUsername')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": "true",
            "ssh": {
              "publicKeys": [
                {
                  "keyData": "[parameters('sshPublicKey')]",
                  "path": "[variables('sshKeyPath')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[variables('imageSku')]",
            "version": "[variables('imageVersion')]"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob, variables('vmStorageAccountContainerName'),'/',variables('OSDiskName'),'.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": "true",
            "storageUri": "[reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vmName'),'/LinuxCustomScriptExtension')]",
      "apiVersion": "2016-03-30",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.0",
        "autoUpgradeMinorVersion": "true",
        "protectedSettings": {
          "commandToExecute": "[concat(variables('scriptParameters'), ' PUBLICIP_FQDN=', '\"', reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn,'\"',' /bin/bash /opt/azure/containers/script.sh >> /var/log/azure/deploy-script-dvm.log 2>&1')]"
        }
      }
    }
  ],
  "outputs": {
    "dvmPublicIpFqdn": {
      "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn]",
      "type": "string"
    }
  }
}
