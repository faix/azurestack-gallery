{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "linuxAdminUsername": {
      "type": "string",
      "defaultValue": "azureuser",
      "metadata": {
        "description": "User name for the Linux Virtual Machines that are part of the Kubernetes cluster and DVM."
      }
    },
    "sshPublicKey": {
      "metadata": {
        "description": "SSH public key used for auth to all Linux machines created as part of the the Kubernetes cluster and DVM."
      },
      "type": "string"
    },
    "masterProfileDnsPrefix": {
      "type": "string",
      "metadata": {
        "description": "This must be a region-unique name e.g. k8s-12345. Try to chose it same as the resource group name as best practice."
      }
    },
    "agentPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes Node Pool Profile Count"
      },
      "type": "int"
    },
    "agentPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The VMSize of Kubernetes node VMs"
      },
      "type": "string"
    },
    "masterPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes Master Pool Profile Count"
      },
      "type": "int"
    },
    "masterPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The VMSize of Kubernetes master VMs"
      },
      "type": "string"
    },
    "storageProfile": {
      "defaultValue": "manageddisk",
      "metadata": {
        "description": "The Storage Profile"
      },
      "type": "string"
    },
    "servicePrincipalClientId": {
      "metadata": {
        "description": "The Service Principal application ID (used by the Kubernetes Azure cloud provider). More help here: https://github.com/Azure/aks-engine/blob/master/docs/topics/service-principals.md"
      },
      "type": "securestring"
    },
    "servicePrincipalClientSecret": {
      "metadata": {
        "description": "The Service Principal Client Secret."
      },
      "type": "securestring"
    },
    "servicePrincipalCertificateKeyVaultId": {
      "defaultValue": "servicePrincipalCertificateKeyVaultId",
      "metadata": {
        "description": "the service Principal Certificate KeyVault Id"
      },
      "type": "string"
    },
    "servicePrincipalCertificateKeyVaultSecretName": {
      "defaultValue": "servicePrincipalCertificateKeyVaultSecretName",
      "metadata": {
        "description": "The service Principal Certificate KeyVault SecretName"
      },
      "type": "string"
    },
    "identitySystem": {
      "defaultValue": "AzureAD",
      "allowedValues": [
        "AzureAD",
        "ADFS"
      ],
      "metadata": {
        "description": "The identity system of Azure Stack. The value could be AzureAD or ADFS"
      },
      "type": "string"
    },
    "kubernetesAzureCloudProviderVersion": {
      "type": "string",
      "defaultValue": "1.11",
      "metadata": {
        "description": "This is the version for the Kubernetes Azure cloud provider. We would use a custom Kubernetes build specifically for Azure Stack for each version."
      }
    }
  },
  "variables": {
    "resourceGroupName": "[resourceGroup().name]",
    "dnsNameForPublicIP": "[toLower(concat('vmd-dns', parameters('masterProfileDnsPrefix')))]",
    "location": "[resourceGroup().location]",
    "imagePublisher": "Canonical",
    "imageOffer": "UbuntuServer",
    "imageSku": "16.04-LTS",
    "imageVersion": "latest",
    "vmSize": "Standard_D2_v2",
    "OSDiskName": "osdisk",
    "nicName": "[concat('vmd-vnic', uniqueString(resourceGroup().id))]",
    "addressPrefix": "10.0.0.0/24",
    "subnetName": "mySubnet",
    "subnetPrefix": "10.0.0.0/24",
    "storageAccountName": "[concat('vmdsa', uniquestring(resourceGroup().id))]",
    "storageAccountType": "Standard_LRS",
    "publicIPAddressName": "[concat('vmd-publicIP', uniqueString(resourceGroup().id))]",
    "publicIPAddressType": "Static",
    "vmStorageAccountContainerName": "vhds",
    "vmName": "[concat('vmd-', uniqueString(resourceGroup().id))]",
    "virtualNetworkName": "[concat('vmd-vnet-', uniqueString(resourceGroup().id))]",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]",
    "networkSecurityGroupName": "[tolower(concat('vmd-nsg',uniquestring(resourceGroup().id)))]",
    "sshKeyPath": "[concat('/home/',parameters('linuxAdminUsername'),'/.ssh/authorized_keys')]",
    "tenantSubscriptionId": "[subscription().subscriptionId]",
    "scriptName": "script",
    "singleQuote": "'",
    "scriptParameters": "[concat('IDENTITY_SYSTEM=','\"',parameters('identitySystem'),'\"',' RESOURCE_GROUP_NAME=','\"',variables('resourceGroupName'),'\"',' PUBLICIP_DNS=','\"',variables('dnsNameForPublicIP'),'\"' ,' TENANT_ID=','\"',subscription().tenantId,'\"' ,' TENANT_SUBSCRIPTION_ID=','\"',variables('tenantSubscriptionId'),'\"',' ADMIN_USERNAME=','\"',parameters('linuxAdminUsername'),'\"',' MASTER_DNS_PREFIX=','\"',parameters('masterProfileDnsPrefix'),'\"' ,' AGENT_COUNT=','\"',parameters('agentPoolProfileCount'),'\"' ,' AGENT_SIZE=','\"',parameters('agentPoolProfileVMSize'),'\"' ,' MASTER_COUNT=','\"',parameters('masterPoolProfileCount'),'\"',' MASTER_SIZE=','\"',parameters('masterPoolProfileVMSize'),'\"' ,' SPN_CLIENT_ID=','\"',parameters('servicePrincipalClientId'),'\"' ,' SPN_CLIENT_SECRET=','\"',parameters('servicePrincipalClientSecret'),'\"' ,' SPN_CLIENT_SECRET_KEYVAULT_ID=','\"',parameters('servicePrincipalCertificateKeyVaultId'),'\"' ,' SPN_CLIENT_SECRET_KEYVAULT_SECRET_NAME=','\"',parameters('servicePrincipalCertificateKeyVaultSecretName'),'\"' ,' K8S_AZURE_CLOUDPROVIDER_VERSION=','\"',parameters('kubernetesAzureCloudProviderVersion'),'\"' ,' REGION_NAME=','\"',variables('location'),'\"' ,' SSH_PUBLICKEY=','\"',parameters('sshPublicKey'),'\"' ,' STORAGE_PROFILE=','\"',parameters('storageProfile'),'\"')]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[toLower(variables('storageAccountName'))]",
      "apiVersion": "2015-06-15",
      "location": "[variables('location')]",
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('networkSecurityGroupName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
          {
            "name": "ssh",
            "properties": {
              "description": "Allow SSH",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 200,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "location": "[variables('location')]",
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[variables('dnsNameForPublicIP')]"
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[variables('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
        "[variables('networkSecurityGroupName')]"
      ],
      "properties": {
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
        },
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2016-03-30",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vmName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "customData": "[base64(concat('#cloud-config\n\nwrite_files:\n- path: \"/opt/azure/containers/script.sh\"\n  permissions: \"0744\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    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'))]",
          "computerName": "[variables('vmName')]",
          "adminUsername": "[parameters('linuxAdminUsername')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": "true",
            "ssh": {
              "publicKeys": [
                {
                  "keyData": "[parameters('sshPublicKey')]",
                  "path": "[variables('sshKeyPath')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[variables('imageSku')]",
            "version": "[variables('imageVersion')]"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob, variables('vmStorageAccountContainerName'),'/',variables('OSDiskName'),'.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": "true",
            "storageUri": "[reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vmName'),'/LinuxCustomScriptExtension')]",
      "apiVersion": "2016-03-30",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.0",
        "autoUpgradeMinorVersion": "true",
        "protectedSettings": {
          "commandToExecute": "[concat(variables('scriptParameters'), ' PUBLICIP_FQDN=', '\"', reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn,'\"',' /bin/bash /opt/azure/containers/script.sh >> /var/log/azure/deploy-script-dvm.log 2>&1')]"
        }
      }
    }
  ],
  "outputs": {
    "dvmPublicIpFqdn": {
      "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn]",
      "type": "string"
    }
  }
}
