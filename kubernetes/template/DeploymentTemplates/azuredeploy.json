{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "linuxAdminUsername": {
      "type": "string",
      "defaultValue": "azureuser",
      "metadata": {
        "description": "User name for the Linux Virtual Machines that are part of the Kubernetes cluster and DVM."
      }
    },
    "sshPublicKey": {
      "metadata": {
        "description": "SSH public key used for auth to all Linux machines created as part of the the Kubernetes cluster and DVM."
      },
      "type": "string"
    },
    "masterProfileDnsPrefix": {
      "type": "string",
      "metadata": {
        "description": "This must be a region-unique name e.g. k8s-12345. Try to chose it same as the resource group name as best practice."
      }
    },
    "agentPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes Node Pool Profile Count"
      },
      "type": "int"
    },
    "agentPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The VMSize of Kubernetes node VMs"
      },
      "type": "string"
    },
    "masterPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes Master Pool Profile Count"
      },
      "type": "int"
    },
    "masterPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The VMSize of Kubernetes master VMs"
      },
      "type": "string"
    },
    "storageProfile": {
      "defaultValue": "manageddisk",
      "metadata": {
        "description": "The Storage Profile"
      },
      "type": "string"
    },
    "servicePrincipalClientId": {
      "metadata": {
        "description": "The Service Principal application ID (used by the Kubernetes Azure cloud provider). More help here: https://github.com/Azure/aks-engine/blob/master/docs/topics/service-principals.md"
      },
      "type": "securestring"
    },
    "servicePrincipalClientSecret": {
      "metadata": {
        "description": "The Service Principal Client Secret."
      },
      "type": "securestring"
    },
    "servicePrincipalCertificateKeyVaultId": {
      "defaultValue": "servicePrincipalCertificateKeyVaultId",
      "metadata": {
        "description": "the service Principal Certificate KeyVault Id"
      },
      "type": "string"
    },
    "servicePrincipalCertificateKeyVaultSecretName": {
      "defaultValue": "servicePrincipalCertificateKeyVaultSecretName",
      "metadata": {
        "description": "The service Principal Certificate KeyVault SecretName"
      },
      "type": "string"
    },
    "identitySystem": {
      "defaultValue": "AzureAD",
      "allowedValues": [
        "AzureAD",
        "ADFS"
      ],
      "metadata": {
        "description": "The identity system of Azure Stack. The value could be AzureAD or ADFS"
      },
      "type": "string"
    },
    "kubernetesAzureCloudProviderVersion": {
      "type": "string",
      "defaultValue": "1.11",
      "metadata": {
        "description": "This is the version for the Kubernetes Azure cloud provider. We would use a custom Kubernetes build specifically for Azure Stack for each version."
      }
    }
  },
  "variables": {
    "resourceGroupName": "[resourceGroup().name]",
    "dnsNameForPublicIP": "[toLower(concat('vmd-dns', parameters('masterProfileDnsPrefix')))]",
    "location": "[resourceGroup().location]",
    "imagePublisher": "Canonical",
    "imageOffer": "UbuntuServer",
    "imageSku": "16.04-LTS",
    "imageVersion": "latest",
    "vmSize": "Standard_D2_v2",
    "OSDiskName": "osdisk",
    "nicName": "[concat('vmd-vnic', uniqueString(resourceGroup().id))]",
    "addressPrefix": "10.0.0.0/24",
    "subnetName": "mySubnet",
    "subnetPrefix": "10.0.0.0/24",
    "storageAccountName": "[concat('vmdsa', uniquestring(resourceGroup().id))]",
    "storageAccountType": "Standard_LRS",
    "publicIPAddressName": "[concat('vmd-publicIP', uniqueString(resourceGroup().id))]",
    "publicIPAddressType": "Static",
    "vmStorageAccountContainerName": "vhds",
    "vmName": "[concat('vmd-', uniqueString(resourceGroup().id))]",
    "virtualNetworkName": "[concat('vmd-vnet-', uniqueString(resourceGroup().id))]",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]",
    "networkSecurityGroupName": "[tolower(concat('vmd-nsg',uniquestring(resourceGroup().id)))]",
    "sshKeyPath": "[concat('/home/',parameters('linuxAdminUsername'),'/.ssh/authorized_keys')]",
    "tenantSubscriptionId": "[subscription().subscriptionId]",
    "scriptName": "script",
    "singleQuote": "'",
    "scriptParameters": "[concat('IDENTITY_SYSTEM=','\"',parameters('identitySystem'),'\"',' RESOURCE_GROUP_NAME=','\"',variables('resourceGroupName'),'\"',' PUBLICIP_DNS=','\"',variables('dnsNameForPublicIP'),'\"' ,' TENANT_ID=','\"',subscription().tenantId,'\"' ,' TENANT_SUBSCRIPTION_ID=','\"',variables('tenantSubscriptionId'),'\"',' ADMIN_USERNAME=','\"',parameters('linuxAdminUsername'),'\"',' MASTER_DNS_PREFIX=','\"',parameters('masterProfileDnsPrefix'),'\"' ,' AGENT_COUNT=','\"',parameters('agentPoolProfileCount'),'\"' ,' AGENT_SIZE=','\"',parameters('agentPoolProfileVMSize'),'\"' ,' MASTER_COUNT=','\"',parameters('masterPoolProfileCount'),'\"',' MASTER_SIZE=','\"',parameters('masterPoolProfileVMSize'),'\"' ,' SPN_CLIENT_ID=','\"',parameters('servicePrincipalClientId'),'\"' ,' SPN_CLIENT_SECRET=','\"',parameters('servicePrincipalClientSecret'),'\"' ,' SPN_CLIENT_SECRET_KEYVAULT_ID=','\"',parameters('servicePrincipalCertificateKeyVaultId'),'\"' ,' SPN_CLIENT_SECRET_KEYVAULT_SECRET_NAME=','\"',parameters('servicePrincipalCertificateKeyVaultSecretName'),'\"' ,' K8S_AZURE_CLOUDPROVIDER_VERSION=','\"',parameters('kubernetesAzureCloudProviderVersion'),'\"' ,' REGION_NAME=','\"',variables('location'),'\"' ,' SSH_PUBLICKEY=','\"',parameters('sshPublicKey'),'\"' ,' STORAGE_PROFILE=','\"',parameters('storageProfile'),'\"')]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[toLower(variables('storageAccountName'))]",
      "apiVersion": "2015-06-15",
      "location": "[variables('location')]",
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('networkSecurityGroupName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
          {
            "name": "ssh",
            "properties": {
              "description": "Allow SSH",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 200,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "location": "[variables('location')]",
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[variables('dnsNameForPublicIP')]"
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[variables('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
        "[variables('networkSecurityGroupName')]"
      ],
      "properties": {
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
        },
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2016-03-30",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vmName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "customData": "[base64(concat('#cloud-config\n\nwrite_files:\n- path: \"/opt/azure/containers/script.sh\"\n  permissions: \"0744\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    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'))]",
          "computerName": "[variables('vmName')]",
          "adminUsername": "[parameters('linuxAdminUsername')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": "true",
            "ssh": {
              "publicKeys": [
                {
                  "keyData": "[parameters('sshPublicKey')]",
                  "path": "[variables('sshKeyPath')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[variables('imageSku')]",
            "version": "[variables('imageVersion')]"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob, variables('vmStorageAccountContainerName'),'/',variables('OSDiskName'),'.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": "true",
            "storageUri": "[reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vmName'),'/LinuxCustomScriptExtension')]",
      "apiVersion": "2016-03-30",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.0",
        "autoUpgradeMinorVersion": "true",
        "protectedSettings": {
          "commandToExecute": "[concat(variables('scriptParameters'), ' PUBLICIP_FQDN=', '\"', reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn,'\"',' /bin/bash /opt/azure/containers/script.sh >> /var/log/azure/deploy-script-dvm.log 2>&1')]"
        }
      }
    }
  ],
  "outputs": {
    "dvmPublicIpFqdn": {
      "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn]",
      "type": "string"
    }
  }
}
