{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "linuxAdminUsername": {
      "type": "string",
      "defaultValue": "azureuser",
      "metadata": {
        "description": "User name for the Linux Virtual Machines that are part of the Kubernetes cluster and DVM."
      }
    },
    "sshPublicKey": {
      "metadata": {
        "description": "SSH public key used for auth to all Linux machines created as part of the the Kubernetes cluster and DVM."
      },
      "type": "string"
    },
    "masterProfileDnsPrefix": {
      "type": "string",
      "metadata": {
        "description": "This must be a region-unique name e.g. k8s-12345. Try to chose it same as the resource group name as best practice."
      }
    },
    "agentPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes Node Pool Profile Count"
      },
      "type": "int"
    },
    "agentPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The VMSize of Kubernetes node VMs"
      },
      "type": "string"
    },
    "masterPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes Master Pool Profile Count"
      },
      "type": "int"
    },
    "masterPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The VMSize of Kubernetes master VMs"
      },
      "type": "string"
    },
    "storageProfile": {
      "defaultValue": "manageddisk",
      "metadata": {
        "description": "The Storage Profile"
      },
      "type": "string"
    },
    "servicePrincipalClientId": {
      "metadata": {
        "description": "The Service Principal application ID (used by the Kubernetes Azure cloud provider). More help here: https://github.com/Azure/aks-engine/blob/master/docs/topics/service-principals.md"
      },
      "type": "securestring"
    },
    "servicePrincipalClientSecret": {
      "metadata": {
        "description": "The Service Principal Client Secret."
      },
      "type": "securestring"
    },
    "servicePrincipalCertificateKeyVaultId": {
      "defaultValue": "servicePrincipalCertificateKeyVaultId",
      "metadata": {
        "description": "the service Principal Certificate KeyVault Id"
      },
      "type": "string"
    },
    "servicePrincipalCertificateKeyVaultSecretName": {
      "defaultValue": "servicePrincipalCertificateKeyVaultSecretName",
      "metadata": {
        "description": "The service Principal Certificate KeyVault SecretName"
      },
      "type": "string"
    },
    "identitySystem": {
      "defaultValue": "AzureAD",
      "allowedValues": [
        "AzureAD",
        "ADFS"
      ],
      "metadata": {
        "description": "The identity system of Azure Stack. The value could be AzureAD or ADFS"
      },
      "type": "string"
    },
    "kubernetesAzureCloudProviderVersion": {
      "type": "string",
      "defaultValue": "1.11",
      "metadata": {
        "description": "This is the version for the Kubernetes Azure cloud provider. We would use a custom Kubernetes build specifically for Azure Stack for each version."
      }
    }
  },
  "variables": {
    "resourceGroupName": "[resourceGroup().name]",
    "dnsNameForPublicIP": "[toLower(concat('vmd-dns', parameters('masterProfileDnsPrefix')))]",
    "location": "[resourceGroup().location]",
    "imagePublisher": "Canonical",
    "imageOffer": "UbuntuServer",
    "imageSku": "16.04-LTS",
    "imageVersion": "latest",
    "vmSize": "Standard_D2_v2",
    "OSDiskName": "osdisk",
    "nicName": "[concat('vmd-vnic', uniqueString(resourceGroup().id))]",
    "addressPrefix": "10.0.0.0/24",
    "subnetName": "mySubnet",
    "subnetPrefix": "10.0.0.0/24",
    "storageAccountName": "[concat('vmdsa', uniquestring(resourceGroup().id))]",
    "storageAccountType": "Standard_LRS",
    "publicIPAddressName": "[concat('vmd-publicIP', uniqueString(resourceGroup().id))]",
    "publicIPAddressType": "Static",
    "vmStorageAccountContainerName": "vhds",
    "vmName": "[concat('vmd-', uniqueString(resourceGroup().id))]",
    "virtualNetworkName": "[concat('vmd-vnet-', uniqueString(resourceGroup().id))]",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]",
    "networkSecurityGroupName": "[tolower(concat('vmd-nsg',uniquestring(resourceGroup().id)))]",
    "sshKeyPath": "[concat('/home/',parameters('linuxAdminUsername'),'/.ssh/authorized_keys')]",
    "tenantSubscriptionId": "[subscription().subscriptionId]",
    "scriptName": "script",
    "singleQuote": "'",
    "scriptParameters": "[concat('IDENTITY_SYSTEM=','\"',parameters('identitySystem'),'\"',' RESOURCE_GROUP_NAME=','\"',variables('resourceGroupName'),'\"',' PUBLICIP_DNS=','\"',variables('dnsNameForPublicIP'),'\"' ,' TENANT_ID=','\"',subscription().tenantId,'\"' ,' TENANT_SUBSCRIPTION_ID=','\"',variables('tenantSubscriptionId'),'\"',' ADMIN_USERNAME=','\"',parameters('linuxAdminUsername'),'\"',' MASTER_DNS_PREFIX=','\"',parameters('masterProfileDnsPrefix'),'\"' ,' AGENT_COUNT=','\"',parameters('agentPoolProfileCount'),'\"' ,' AGENT_SIZE=','\"',parameters('agentPoolProfileVMSize'),'\"' ,' MASTER_COUNT=','\"',parameters('masterPoolProfileCount'),'\"',' MASTER_SIZE=','\"',parameters('masterPoolProfileVMSize'),'\"' ,' SPN_CLIENT_ID=','\"',parameters('servicePrincipalClientId'),'\"' ,' SPN_CLIENT_SECRET=','\"',parameters('servicePrincipalClientSecret'),'\"' ,' SPN_CLIENT_SECRET_KEYVAULT_ID=','\"',parameters('servicePrincipalCertificateKeyVaultId'),'\"' ,' SPN_CLIENT_SECRET_KEYVAULT_SECRET_NAME=','\"',parameters('servicePrincipalCertificateKeyVaultSecretName'),'\"' ,' K8S_AZURE_CLOUDPROVIDER_VERSION=','\"',parameters('kubernetesAzureCloudProviderVersion'),'\"' ,' REGION_NAME=','\"',variables('location'),'\"' ,' SSH_PUBLICKEY=','\"',parameters('sshPublicKey'),'\"' ,' STORAGE_PROFILE=','\"',parameters('storageProfile'),'\"')]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[toLower(variables('storageAccountName'))]",
      "apiVersion": "2015-06-15",
      "location": "[variables('location')]",
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('networkSecurityGroupName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
          {
            "name": "ssh",
            "properties": {
              "description": "Allow SSH",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 200,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "location": "[variables('location')]",
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[variables('dnsNameForPublicIP')]"
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[variables('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
        "[variables('networkSecurityGroupName')]"
      ],
      "properties": {
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
        },
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2016-03-30",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vmName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "customData": "[base64(concat('#cloud-config\n\nwrite_files:\n- path: \"/opt/azure/containers/script.sh\"\n  permissions: \"0744\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    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'))]",
          "computerName": "[variables('vmName')]",
          "adminUsername": "[parameters('linuxAdminUsername')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": "true",
            "ssh": {
              "publicKeys": [
                {
                  "keyData": "[parameters('sshPublicKey')]",
                  "path": "[variables('sshKeyPath')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[variables('imageSku')]",
            "version": "[variables('imageVersion')]"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob, variables('vmStorageAccountContainerName'),'/',variables('OSDiskName'),'.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": "true",
            "storageUri": "[reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vmName'),'/LinuxCustomScriptExtension')]",
      "apiVersion": "2016-03-30",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.0",
        "autoUpgradeMinorVersion": "true",
        "protectedSettings": {
          "commandToExecute": "[concat(variables('scriptParameters'), ' PUBLICIP_FQDN=', '\"', reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn,'\"',' /bin/bash /opt/azure/containers/script.sh >> /var/log/azure/deploy-script-dvm.log 2>&1')]"
        }
      }
    }
  ],
  "outputs": {
    "dvmPublicIpFqdn": {
      "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn]",
      "type": "string"
    }
  }
}
